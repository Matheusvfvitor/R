x[1,4]
x[161,4]
for(i in 1:nrow(x)){
if(x[i,4] >0){
x[i,7] <- x[i-1,7]+1
}
}
x = gen_data %>% mutate(Days.after.first.death = 0)
x = tibble(x)
x = tibble(x)
x
x$Date = as.Date(x$Date, format = "%m/d,y")
x = gen_data %>% mutate(Days.after.first.death = 0)
x$Days.after.first.death = as.numeric(x$Days.after.first.death)
x = tibble(x)
x$Date = as.Date(x$Date, format = "%m/d/y")
x = gen_data %>% mutate(Days.after.first.death = 0)
x$Days.after.first.death = as.numeric(x$Days.after.first.death)
x = tibble(x)
x$Date = as.Date(x$Date, format = "%m/%d/%y")
x = x %>% arrange(Country.Region, Date)
for(i in 1:nrow(x)){
if(x[i,4] >0){
x[i,7] <- x[i-1,7]+1
}
}
x = gen_data %>% mutate(Days.after.first.case = 0)
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x$Days.after.first.death = as.numeric(x$Days.after.first.case)
x$Days.after.first.death = as.numeric(x$Days.after.first.death)
x = tibble(x)
x$Date = as.Date(x$Date, format = "%m/%d/%y")
x = x %>% arrange(Country.Region, Date)
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x$Days.after.first.death = as.numeric(x$Days.after.first.death)
x$Days.after.first.death = as.numeric(x$Days.after.first.case)
x = tibble(x)
x$Date = as.Date(x$Date, format = "%m/%d/%y")
x = x %>% arrange(Country.Region, Date)
for(i in 1:nrow(x)){
if(x[i,4] >0){
x[i,7] <- x[i-1,7]+1
}
}
for(i in 1:nrow(x)){
if(x[i,3] >0){
x[i,8] <- x[i-1,8]+1
}
}
for(i in 1:nrow(x)){
if(x[i,3] >0){
x[i,8] <- x[i-1,8]+1
}
}
x = df
df <- x
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x$Days.after.first.death = as.numeric(x$Days.after.first.death)
x$Days.after.first.death = as.numeric(x$Days.after.first.case)
x = tibble(x)
x$Date = as.Date(x$Date, format = "%m/%d/%y")
x = x %>% arrange(Country.Region, Date)
##Days after first Death
for(i in 1:nrow(x)){
if(x[i,4] >0){
x[i,7] <- x[i-1,7]+1
}
}
##Days after first case
for(i in 1:nrow(x)){
if(x[i,3] >0){
x[i,8] <- x[i-1,8]+1
}
}
df <- x
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x$Days.after.first.death = as.numeric(x$Days.after.first.death)
x$Days.after.first.death = as.numeric(x$Days.after.first.case)
x = tibble(x)
x$Date = as.Date(x$Date, format = "%m/%d/%y")
x = x %>% arrange(Country.Region, Date)
##Days after first Death
for(i in 1:nrow(x)){
if(x[i,4] >0){
x[i,7] <- x[i-1,7]+1
}
}
##Days after first case
for(i in 1:nrow(x)){
if(x[i,3] >0){
x[i,8] <- x[i-1,8]+1
}
}
df -> x
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x$Days.after.first.death = as.numeric(x$Days.after.first.death)
x$Days.after.first.death = as.numeric(x$Days.after.first.case)
x = tibble(x)
x$Date = as.Date(x$Date, format = "%m/%d/%y")
x = x %>% arrange(Country.Region, Date)
##Days after first Death
for(i in 1:nrow(x)){
if(x[i,4] >0){
x[i,7] <- x[i-1,7]+1
}
}
##Days after first case
for(i in 1:nrow(x)){
if(x[i,3] >0){
x[i,8] <- x[i-1,8]+1
}
}
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x$Days.after.first.death = as.numeric(x$Days.after.first.death)
x$Days.after.first.death = as.numeric(x$Days.after.first.case)
x = tibble(x)
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x = gen_data %>% mutate(Days.after.first.death = 0, Days.after.first.case = 0)
x$Days.after.first.death = as.numeric(x$Days.after.first.death)
x$Days.after.first.death = as.numeric(x$Days.after.first.case)
x = tibble(x)
x$Date = as.Date(x$Date, format = "%m/%d/%y")
x = x %>% arrange(Country.Region, Date)
##Days after first Death
for(i in 1:nrow(x)){
if(x[i,4] >0){
x[i,7] <- x[i-1,7]+1
}
}
##Days after first case
for(i in 1:nrow(x)){
if(x[i,3] >0){
x[i,8] <- x[i-1,8]+1
}
}
df <- x
View(df)
y %>% gather(Key = "Status", Occ., c("Total.Cases", "Total.Deaths", "Total.Recovered","Actives"))
y %>% gather(Key = "Status", value= "Occ.", c("Total.Cases", "Total.Deaths", "Total.Recovered","Actives"))
y %>% gather(key = "Status", value= "Occ.", c("Total.Cases", "Total.Deaths", "Total.Recovered","Actives"))
y %>% gather(key = "Status", value= "Occ.", c("Total.Cases", "Total.Deaths", "Total.Recovered","Actives"))
y %>% gather(key = "Status", value= "Occ.", c("Total.Cases", "Total.Deaths", "Total.Recovery","Actives"))
View(y)
y = df %>% gather(key = "Status", value= "Occ.", c("Total.Cases", "Total.Deaths", "Total.Recovery","Actives"))
time_table = y
ggplot(time_table, aes(Days.after.first.case, Occ))+geom_line()
ggplot(time_table, aes(Days.after.first.case, Occ.))+geom_line()
ggplot(time_table, aes(Days.after.first.case, Occ.))+
geom_line()+
mts_theme
ggplot(time_table, aes(Days.after.first.case, Occ.))+
geom_line(fill = Country.Region)+
ggtitle("Casos após primeiro dia")
maxDate = max(df$Date)
top20 = df %>% filter(Date = maxDate) %>% top_n(20,Total.Cases)
top20 = df %>% filter(Date == maxDate) %>% top_n(20,Total.Cases)
View(top20)
top20 = top20$Country.Region
z = time_table %>% filter(Country.Region == top20)
View(z)
ggplot(top20, aes(Days.after.first.case, Occ.))+
geom_line(fill = Country.Region)+
ggtitle("Casos após primeiro dia")
time_20 = time_table %>% filter(Country.Region == top20)
ggplot(time_20, aes(Days.after.first.case, Occ.))+
geom_line(fill = Country.Region)+
ggtitle("Casos após primeiro dia")
ggplot(time_20, aes(Days.after.first.case, Occ.))+
geom_line(color = Country.Region)+
ggtitle("Casos após primeiro dia")
ggplot(time_20, aes(Days.after.first.case, Occ. color = CCountry.Region))+
geom_line()+
ggtitle("Casos após primeiro dia")
ggplot(time_20, aes(Days.after.first.case, Occ. color = CCountry.Region))+
geom_line()+
ggtitle("Casos após primeiro dia")+
mts_theme
ggplot(time_20, aes(Days.after.first.case, Occ. coloor = CCountry.Region))+
geom_line()+
ggtitle("Casos após primeiro dia")+
mts_theme
ggplot(time_20, aes(Days.after.first.case, Occ. colour = CCountry.Region))+
geom_line()+
ggtitle("Casos após primeiro dia")+
mts_theme
ggplot(time_20, aes(Days.after.first.case, Occ. color = Country.Region))+
geom_line()+
ggtitle("Casos após primeiro dia")+
mts_theme
ggplot(time_20, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Casos após primeiro dia")+
mts_theme
time_20 = time_20 %>% filter(Status = "Total.Cases")
time_20 = time_20 %>% filter(Status == "Total.Cases")
ggplot(time_20, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Casos após primeiro dia")+
mts_theme
top20 = df %>% filter(Date == maxDate) %>% top_n(10,Total.Cases)
top20 = top20$Country.Region
y = df %>% gather(key = "Status", value= "Occ.", c("Total.Cases", "Total.Deaths", "Total.Recovery","Actives"))
time_table = y
time_10 = time_table %>% filter(Country.Region == top20)
time_10 = time_10 %>% filter(Status == "Total.Cases")
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Casos após primeiro dia")+
mts_theme
time_10 = time_10 %>% filter(Status == "Total.Deaths")
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Mortes após primeiro dia")+
mts_theme
time_table = y
time_10 = time_table %>% filter(Country.Region == top20)
View(time_10)
time_10 = time_10 %>% filter(Status == "Total.Deaths")
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Mortes após primeiro dia")+
mts_theme
top20 = top20 %>% filter(Country.Region != "US")
top20 = df %>% filter(Date == maxDate) %>% top_n(10,Total.Cases)
top20 = top20$Country.Region
top20 = top20$Country.Region
top20 = df %>% filter(Date == maxDate) %>% top_n(10,Total.Cases)
top20 = top20$Country.Region
top20 = top20 %>% filter(Country.Region != "US")
top20 = top20 %>% filter(V1 != "US")
top20 = df %>% filter(Date == maxDate) %>% top_n(10,Total.Cases)
top20 = top20 %>% filter(V1 != "US")
top20 = top20 %>% filter(Country.Region != "US")
top20 = top20$Country.Region
y = df %>% gather(key = "Status", value= "Occ.", c("Total.Cases", "Total.Deaths", "Total.Recovery","Actives"))
time_table = y
time_10 = time_table %>% filter(Country.Region == top20)
time_10 = time_10 %>% filter(Status == "Total.Cases")
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Casos após primeiro dia")+
mts_theme
time_10 = time_10 %>% filter(Status == "Total.Deaths")
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Mortes após primeiro dia")+
mts_theme
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Mortes após primeiro dia")+
mts_theme
time_10 = time_10 %>% filter(Status == "Total.Deaths")
View(time_10)
time_10 = time_table %>% filter(Country.Region == top20)
time_table = y
time_10 = time_table %>% filter(Country.Region == top20)
top20 = df %>% filter(Date == maxDate) %>% top_n(10,Total.Cases)
top20 = top20 %>% filter(Country.Region != "US")
top20 = top20$Country.Region
time_table = y
time_10 = time_table %>% filter(Country.Region == top20)
time_table = y
time_10 = time_table %>% filter(Country.Region == top20)
View(time_table)
y = df %>% gather(key = "Status", value= "Occ.", c("Total.Cases", "Total.Deaths", "Total.Recovery","Actives"))
time_table = y
time_10 = time_table %>% filter(Country.Region == top20)
top20 = df %>% filter(Date == maxDate) %>% top_n(10,Total.Cases)
top20 = top20 %>% filter(Country.Region != "US")
top20 = top20$Country.Region
y = df %>% gather(key = "Status", value= "Occ.", c("Total.Cases", "Total.Deaths", "Total.Recovery","Actives"))
time_table = y
time_10 = time_table %>% filter(Country.Region == top20)
time_10 = time_10 %>% filter(Status == "Total.Cases")
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Casos após primeiro dia")+
mts_theme
y = df %>% gather(key = "Status", value= "Occ.", c("Total.Cases", "Total.Deaths", "Total.Recovery","Actives"))
time_table = y
time_10 = time_table %>% filter(Country.Region == top20)
time_10 = time_10 %>% filter(Status == "Total.Deaths")
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Mortes após primeiro dia")+
mts_theme
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
geom_smooth()+
ggtitle("Mortes após primeiro dia")+
mts_theme
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line(method =  "lm")+
ggtitle("Casos após primeiro dia")+
mts_theme
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
geom_smooth(method = "lm")+
ggtitle("Mortes após primeiro dia")+
mts_theme
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
facet_wrap(Country.Region)
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
facet_wrap(Country.Region)+
geom_smooth(method = "lm")+
ggtitle("Mortes após primeiro dia")+
mts_theme
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
geom_smooth(method = "lm")+
ggtitle("Mortes após primeiro dia")+
mts_theme
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle("Mortes após primeiro dia")+
mts_theme
ggplot(time_10, aes(Days.after.first.case, Occ. ,color = Country.Region))+
geom_line()+
ggtitle(" Cases após primeiro dia")+
mts_theme
ggplot(time_10, aes(Days.after.first.death, Occ. ,color = Country.Region))+
geom_line()+
ggtitle(" Mortes após primeiro dia")+
mts_theme
View(df)
df = df%>% mutate(New.Cases = Total.Cases - lag(Total.Cases,1,0))
df = df%>% mutate(New.Cases = Total.Cases - lag(Total.Cases,1,0), New.Deaths = Total.Deaths - lag(Total.Deaths,1,0))
z = df%>% mutate(New.Cases = ifelse(Country.Region == lag(Country.Region,1),Total.Cases - lag(Total.Cases,1,0),0),
New.Deaths = Total.Deaths - lag(Total.Deaths,1,0))
View(z)
z = df%>% mutate(New.Cases = ifelse(Country.Region == lag(Country.Region,1),Total.Cases - lag(Total.Cases,1,0),0),
New.Deaths = ifelse(Country.Region == lag(Country.Region,1), Total.Deaths - lag(Total.Deaths,1,0),0))
df = df%>% mutate(New.Cases = ifelse(Country.Region == lag(Country.Region,1),Total.Cases - lag(Total.Cases,1,0),0),
New.Deaths = ifelse(Country.Region == lag(Country.Region,1), Total.Deaths - lag(Total.Deaths,1,0),0))
new_data = df %>%
gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Total.Recovery", "Actives", "New.Cases","New.Deaths"))
View(new_data)
new_data = dew_data %>% filter(Country.Region == top20)
new_data = new_data %>% filter(Country.Region == top20)
new_cases = new_data %>% filter(Status = "New.Cases")
new_cases = new_data %>% filter(Status == "New.Cases")
ggplot(new_cases, aes(Date, Occ.))+geom_col()+mts_theme
View(new_cases)
ggplot(new_cases, aes(Date, Occ., fill = Country.Region))+geom_col()+mts_theme
new_cases[new_cases$Occ. <0,6] = 0
new_cases = new_data %>% filter(Status == "New.Cases")
new_cases[new_cases$Occ. <0,6] = 0
ggplot(new_cases, aes(Date, Occ., fill = Country.Region))+geom_col()+mts_theme
new_cases = new_cases %>% filter (Occ. >0)
ggplot(new_cases, aes(Date, Occ., fill = Country.Region))+geom_col()+mts_theme
ggplot(new_cases, aes(Date, Occ., fill = Country.Region))+geom_col()+mts_theme
new_cases = new_cases %>% filter (Date >2020-03-01)
ggplot(new_cases, aes(Date, Occ., fill = Country.Region))+geom_col()+mts_theme
ggplot(time_10, aes(Days.after.first.death, Occ. ,color = Country.Region))+
geom_line()+
ggtitle(" Mortes após primeiro dia")+
mts_theme
ggplot(new_cases, aes(Date, Occ., fill = Country.Region))+geom_col()+mts_theme
ggplot(new_deaths, aes(Date, Occ., fill = Country.Region))+geom_col()+mts_theme
new_deaths = new_data %>% filter(Status == "New.Deaths")
ggplot(new_deaths, aes(Date, Occ., fill = Country.Region))+geom_col()+mts_theme
new_deaths[new_deaths$Occ. <0,6] = 0
new_deaths = new_data %>% filter(Status == "New.Deaths")
new_deaths = new_deaths %>% filter (Occ. >0)
new_deaths = new_deaths %>% filter (Date >2020-03-01)
ggplot(new_deaths, aes(Date, Occ., fill = Country.Region))+geom_col()+mts_theme
ggplot(new_deaths, aes(Date, Occ., fill = Country.Region))+
geom_col()+
ggtitle("New Deaths")+
mts_theme
View(new_deaths)
ggplot(new_deaths, aes(Date, Occ., color = Country.Region))+
geom_line()+
ggtitle("New Deaths")+
mts_theme
ggplot(new_deaths, aes(Days.after.first.death, Occ., color = Country.Region))+
geom_line()+
ggtitle("New Deaths by Date")+
mts_theme
new_deaths_br = new_deaths %>% filter(Country.Region == "Brazil")
View(new_deaths_br)
new_deaths_br = df %>% filter(Country.Region == "Brazil" , Status = "New.Deaths")
new_deaths_br = df %>% filter(Country.Region == "Brazil" , Status == "New.Deaths")
new_cases = new_data %>% filter(Status == "New.Cases")
new_deaths = new_data %>% filter(Status == "New.Deaths")
new_data = new_data %>% filter(Country.Region == top20)
new_data = df %>%
gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Total.Recovery", "Actives", "New.Cases","New.Deaths"))
new_data = new_data %>% filter(Country.Region == top20)
new_deaths_br = df %>% filter(Country.Region == "Brazil" , Status == "New.Deaths")
new_deaths_br = df %>% filter(Country.Region == "Brazil")
View(new_deaths_br)
new_deaths_br = new_deaths_br %>% gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Actives", "New.Cases", "New.Deaths"))
new_deaths_br = new_deaths_br %>% gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Actives", "New.Cases", "New.Deaths")) %>%
filter(Status == "New.Deaths")
new_deaths_br = new_deaths_br %>% filter(Status == "New.Deaths")
new_deaths_br = new_deaths_br %>% filter(Status == "New.Deaths")
new_data_br = df %>% filter(Country.Region == "Brazil")
new_data_br = new_data_br %>% gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Actives", "New.Cases", "New.Deaths"))
new_data_br = df %>% filter(Country.Region == "Brazil")
new_data_br = new_data_br %>% gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Actives", "New.Cases", "New.Deaths"))
new_deaths_br = new_data_br %>% filter(Status == "New.Deaths")
new_data = new_data %>% gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Actives", "New.Cases", "New.Deaths"))
new_deaths = new_data %>% filter(Status == "New.Deaths")
View(new_deaths)
new_data = new_data %>% gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Actives", "New.Cases", "New.Deaths"))
new_data = df %>% gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Actives", "New.Cases", "New.Deaths"))
View(new_data)
new_deaths = new_data %>% filter(Status == "New.Deaths")
ggplot(new_deaths, aes(Date, Occ., color = Country.Region))+
geom_line()+
ggtitle("New Deaths by Date")+
mts_theme
new_data = new_data %>% filter(top20)
new_deaths = new_data %>% filter(Status == "New.Deaths")
ggplot(new_deaths, aes(Date, Occ., color = Country.Region))+
geom_line()+
ggtitle("New Deaths by Date")+
mts_theme
new_data = new_data %>% filter(top20)
top20
new_data = new_data %>% filter(Country.Region == top20)
new_deaths = new_data %>% filter(Status == "New.Deaths")
ggplot(new_deaths, aes(Date, Occ., color = Country.Region))+
geom_line()+
ggtitle("New Deaths by Date")+
mts_theme
View(new_data)
View(new_deaths)
top20
new_data = new_data %>% filter(Country.Region == Brazil)
new_data = new_data %>% filter(Country.Region == "Brazil")
View(new_data)
new_data = df %>% gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Actives", "New.Cases", "New.Deaths"))
new_deaths = new_data %>% filter(Status == "New.Deaths")
x = new_deaths %>% filter(Country.Region == top20)
View(x)
new_deaths = new_data %>% filter(Status == "New.Deaths")
new_deaths = new_data %>% filter(Status == "New.Deaths")
View(new_deaths)
top20$Country.Region
top20 = df %>% filter(Date == maxDate) %>% top_n(10,Total.Cases)
top20 = top20 %>% filter(Country.Region != "US")
View(top20)
x = new_deaths %>% filter(Country.Region == top20$Country.Region)
x = new_deaths %>% filter(Country.Region %in% top20$Country.Region)
new_deaths = new_deaths %>% filter(Country.Region %in% top20$Country.Region)
ggplot(new_deaths, aes(Date, Occ., color = Country.Region))+
geom_line()+
ggtitle("New Deaths by Date")+
mts_theme
ggplot(new_deaths, aes(Days.after.first.death, Occ., color = Country.Region))+
geom_line()+
ggtitle("New Deaths by Date")+
mts_theme
ggplot(new_deaths, aes(Days.after.first.death, Occ., color = Country.Region))+
geom_line()+
facet_wrap(Contry.Region)
ggplot(new_deaths, aes(Days.after.first.death, Occ., color = Country.Region))+
geom_line()+
facet_wrap(Country.Region)
new_data = new_data %>% filter(Country.Region %in% top20)
new_cases = new_data %>% filter(Status == "New.Cases")
new_cases[new_cases$Occ. <0,6] = 0
new_cases = new_cases %>% filter (Occ. >0)
new_cases = new_cases %>% filter (Date >2020-03-01)
ggplot(new_cases, aes(Date, Occ., fill = Country.Region))+geom_col()+mts_theme
new_data = df %>%
gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Total.Recovery", "Actives", "New.Cases","New.Deaths"))
new_data = new_data %>% filter(Country.Region %in% top20)
new_data = df %>%
gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Total.Recovery", "Actives", "New.Cases","New.Deaths"))
df = df%>% mutate(New.Cases = ifelse(Country.Region == lag(Country.Region,1),Total.Cases - lag(Total.Cases,1,0),0),
New.Deaths = ifelse(Country.Region == lag(Country.Region,1), Total.Deaths - lag(Total.Deaths,1,0),0))
new_data = df %>%
gather(key = "Status", value = "Occ.",
c("Total.Cases", "Total.Deaths", "Total.Recovery", "Actives", "New.Cases","New.Deaths"))
ggplot(new_deaths, aes(Days.after.first.death, Occ., color = Country.Region))+
geom_line()+
facet_wrap(~Country.Region)
top20 = df %>% filter(Date == maxDate) %>% top_n(10,Total.Cases)
new_deaths = new_deaths %>% filter(Country.Region %in% top20$Country.Region)
ggplot(new_deaths, aes(Date, Occ., color = Country.Region))+
geom_line()+
ggtitle("New Deaths by Date")+
mts_theme
top20 = df %>% filter(Date == maxDate) %>% top_n(10,Total.Cases)
new_deaths = new_deaths %>% filter(Country.Region %in% top20$Country.Region)
ggplot(new_deaths, aes(Date, Occ., color = Country.Region))+
geom_line()+
ggtitle("New Deaths by Date")+
mts_theme
ggplot(new_deaths, aes(Days.after.first.death, Occ., color = Country.Region))+
geom_line()+
facet_wrap(~Country.Region)
